#!/data/data/com.termux/files/usr/bin/python

# Script that downloads given URL
# unzips and loads 83p files to AndieGraph

import glob
import os
import sys

os.system('mkdir -p /data/data/com.termux/files/home/ti-stuff/downloads')
os.chdir('/data/data/com.termux/files/home/ti-stuff/downloads/')
os.system('rm -rf *')

shell = sys.argv[1].split('/')[-2]
shells = {'ashell83' : 'https://www.ticalc.org/pub/83/asm/shells/ashell.zip',
          'doorscs' : 'https://www.ticalc.org/pub/83/asm/shells/dcs7.zip',
          'ion' : 'https://www.ticalc.org/pub/83/asm/shells/ion16u.zip',
          'sos' : 'https://www.ticalc.org/pub/83/asm/shells/sos.zip',
          'venus' : 'https://www.ticalc.org/pub/83/asm/shells/venus.zip'}

if shell in shells:
    os.system('curl --output shell.zip ' + shells[shell])
    os.system('unzip shell.zip')

os.system('curl --output dl.zip ' + sys.argv[1])
os.system('unzip dl.zip')

group_files = glob.glob(os.getcwd() + '/**/*.83g', recursive=True)
group_files.extend(glob.glob(os.getcwd() + '/**/*.83G', recursive=True))

for group_file in group_files:
    os.system('split83g ' + group_file)

prog_files = glob.glob(os.getcwd() + '/**/*.83p', recursive=True)
prog_files.extend(glob.glob(os.getcwd() + '/**/*.83P', recursive=True))

assert prog_files != [], "No 83p-files available"

if shell == 'sos':
    used_libs = set()
    # List below can be dynamically generated per shell from ticalc instead.
    sos_libs = [b'ZLIB', b'ZGFXL', b'ZINPT', b'ZLMATH']
    for prog in prog_files:
        progdata = open(prog, 'rb').read()
        for lib in sos_libs:
            if progdata.find(lib) > 0:
                used_libs.add(lib)
    for lib in used_libs:
        prog_files.append('/data/data/com.termux/files/home/ti-stuff/soslibs/' + lib.decode() + '.83p')

if shell == 'ion':
    parent = '~/ti-stuff/ion.ram'
else:
    parent = '~/ti-stuff/clean.ram'

command = 'almosttx --parent ' + parent + ' --child /sdcard/Download/Ti83.RAM "' + '" "'.join(prog_files) + '"'
print(command)
os.system(command)

os.system('startTI')
